# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: FirstJob
    steps:
    - bash: echo Build FirstJob
    - bash: echo $(PipeLineLevelVariable)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.SourceBranchName)
    - bash: echo $(Build.SourceDirectory)
    - bash: ls -R $(System.DefaultworkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: java -version
    - bash: node --version
    - bash: python --version
    - bash: mvn -version
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultworkingDirectory)'
        Contents: |
          **/*.yaml
          **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - bash: ls -R $(Build.ArtifactStagingDirectory)
  # - job: SecondJob
  #   steps:
  #   - bash: echo Build SecondJob    
# - stage: DevDeploy
#   variables:
#      environment: Dev
#   dependsOn: Build
#   jobs:
#   - job: DevDeployJob
#     steps:
#     - bash: echo $(environment)DevDeployJob
# - stage: QADeploy
#   variables:
#     environment: QA
#   dependsOn: DevDeploy
#   jobs:
#   - job: QADeployJob
#     steps:
#     - bash: echo $(environment)DevDeployJob
# - stage: ProdDeploy
#   dependsOn: 
#   - DevDeploy
#   - QADeploy
#   jobs:
#   - job: ProdDeployJob
#     steps:
#     - bash: echo ProdDeploy Job
